name: release

on:
  push:
    branches: ['master']
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - '.dockerignore'
  workflow_dispatch:
env:
  RUST_VERSION: 1.83.0
jobs:
  linux: 
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/inkroomtemp/rust_musl_build:1.83.0
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build
        run: |
          env
          rustup show
          mkdir out
          cargo build --release --target=x86_64-unknown-linux-musl
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-linux
          path: target/x86_64-unknown-linux-musl/release/m3u8-dl
  windows:
    runs-on: windows-2022
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Build
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"
        run: |
          cargo build --release
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-windows
          path: target/release/m3u8-dl.exe
  mac: 
    runs-on: macos-13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
      - name: Build
        run: |
          cargo build --release && mv target/release/m3u8-dl target/release/m3u8-dl-mac
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-mac
          path: target/release/m3u8-dl-mac
  release:
    runs-on: ubuntu-20.04
    needs: ["mac","linux","windows"]
    permissions:
        contents: write
        packages: write
    steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            fetch-tags: true
            fetch-depth: 0
        - name: Download artifacts
          uses: actions/download-artifact@v4
          with:
            merge-multiple: true
            pattern: app-*
            path: app/
        - name: Release Ready
          id: ready
          env:
            GH_TOKEN: ${{ github.token }}
          run: |
            new_tag=$(date +%Y%m%d)
            now_tag=$(curl -sSf https://api.github.com/repos/inkroom/m3u8-dl/releases/latest | jq --raw-output '.tag_name')
            if [[ "$new_tag" = "$now_tag" ]]; then
              echo "delete $now_tag"
              gh release delete $now_tag
              now_tag=$(curl -sSf https://api.github.com/repos/inkroom/m3u8-dl/releases | jq --raw-output '.[0].tag_name')
            fi
            commit=$(git rev-list -n 1 $now_tag)
            echo "$commit"

            temp=$(git --no-pager tag | grep $new_tag || echo "")
            if [[ "$temp" = "$new_tag" ]]; then
                echo "delete remote tag $new_tag"
                git push origin --delete $new_tag
                git tag -d $new_tag
            fi
            git tag $new_tag
            echo "create tag $new_tag"
            git push origin $new_tag
            # commit=$(git --no-pager log --pretty=format:"%H" | grep -B 1 $commit | head -n 1)
            echo "after-$commit"
            msg=$(git --no-pager log --pretty=format:"- [%s](https://github.com/${{ github.repository}}/commit/%H)" $commit..HEAD)
            echo "$msg" > body.md
            echo "tag=$new_tag" >> $GITHUB_OUTPUT
            # 如果直接指向master，release会落后一个commit
            # gh release create -n "$msg" --target $new_tag $(date +%Y%m%d) ./app/*
        - name: Create Release
          uses: ncipollo/release-action@v1
          env:
            GH_TOKEN: ${{ github.token }}
          with:
            artifacts: "app/*"
            bodyFile: "body.md"
            tag: ${{ steps.ready.outputs.tag }}